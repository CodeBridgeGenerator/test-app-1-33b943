
import { faker } from "@faker-js/faker";
export default (user,count) => {
    let data = [];
    for (let i = 0; i < count; i++) {
        const fake = {
noff: faker.lorem.sentence(1),
invoicetype: faker.lorem.sentence(1),
invoicedateandtime: faker.lorem.sentence(1),
originaleinvoicereferencenumber: faker.lorem.sentence(1),
suppliername: faker.lorem.sentence(1),
suppliertin: faker.lorem.sentence(1),
suppliersstregistrationnumber: faker.lorem.sentence(1),
identifiertype: faker.lorem.sentence(1),
identifiernumber: faker.lorem.sentence(1),
suppliermsiccode: faker.lorem.sentence(1),
suppliertourismtaxregistrationnumber: faker.lorem.sentence(1),
supplierbusinessactivitydescription: faker.lorem.sentence(1),
supplieremail: faker.lorem.sentence(1),
thefirstsuppliercontactnumber: faker.lorem.sentence(1),
suppliercontactnumber: faker.lorem.sentence(1),
countryname: faker.lorem.sentence(1),
statename: faker.lorem.sentence(1),
cityname: faker.lorem.sentence(1),
postalzone: faker.lorem.sentence(1),
buyername: faker.lorem.sentence(1),
buyertin: faker.lorem.sentence(1),
buyersstregistrationnumber: faker.lorem.sentence(1),
buyerbusinessregistrationnumber: faker.lorem.sentence(1),
buyeremail: faker.lorem.sentence(1),
buyercountryname: faker.lorem.sentence(1),
buyerstatename: faker.lorem.sentence(1),
buyercityname: faker.lorem.sentence(1),
buyerpostalzone: faker.lorem.sentence(1),
thefirstbuyercontactnumber: faker.lorem.sentence(1),
buyercontactnumber: faker.lorem.sentence(1),
invoicecurrency: faker.lorem.sentence(1),
currencyexchangerate: faker.lorem.sentence(1),
frequencyofbilling: faker.lorem.sentence(1),
billingperiodstartdate: faker.lorem.sentence(1),
billingperiodenddate: faker.lorem.sentence(1),
paymentmode: faker.lorem.sentence(1),
supplierbankaccountnumber: faker.lorem.sentence(1),
paymentterms: faker.lorem.sentence(1),
prepaymentamount: faker.lorem.sentence(1),
prepaymentdate: faker.lorem.sentence(1),
prepaymentreferencenumber: faker.lorem.sentence(1),
shippingrecipientname: faker.lorem.sentence(1),
shippingrecipientcountryname: faker.lorem.sentence(1),
shippingrecipientstatename: faker.lorem.sentence(1),
shippingrecipientcityname: faker.lorem.sentence(1),
shippingrecipientpostalzone: faker.lorem.sentence(1),
shippingrecipienttin: faker.lorem.sentence(1),
shippingrecipientidentifiertype: faker.lorem.sentence(1),
shippingrecipientbusinessregistrationnumber: faker.lorem.sentence(1),
billreferencenumber: faker.lorem.sentence(1),
referencenumberofcustomsformno1: faker.lorem.sentence(1),
incoterms: faker.lorem.sentence(1),
freetradeagreementinformation: faker.lorem.sentence(1),
authorisationnumberforcertifiedexporter: faker.lorem.sentence(1),
referencenumberofcustomsformno2: faker.lorem.sentence(1),
invoicelinenumber: faker.lorem.sentence(1),
invoicelineclassification: faker.lorem.sentence(1),
productname: faker.lorem.sentence(1),
quantity: faker.lorem.sentence(1),
unitprice: faker.lorem.sentence(1),
measurement: faker.lorem.sentence(1),
subtotal: faker.lorem.sentence(1),
countryoforigin: faker.lorem.sentence(1),
totalexcludingtax: faker.lorem.sentence(1),
taxtype: faker.lorem.sentence(1),
taxrate: faker.lorem.sentence(1),
taxamount: faker.lorem.sentence(1),
taxexemptiondetails: faker.lorem.sentence(1),
taxexemptionamount: faker.lorem.sentence(1),
discountrate: faker.lorem.sentence(1),
discountamount: faker.lorem.sentence(1),
discountdescription: faker.lorem.sentence(1),
feeorchargerate: faker.lorem.sentence(1),
feeorchargeamount: faker.lorem.sentence(1),
totaltaxableamountpertaxtype: faker.lorem.sentence(1),
totaltaxamountpertaxtype: faker.lorem.sentence(1),
detailsoftaxexemption: faker.lorem.sentence(1),
amountexemptedfromtax: faker.lorem.sentence(1),
additionaldiscountamount: faker.lorem.sentence(1),
additionaldiscountdescription: faker.lorem.sentence(1),
additionalfeeamount: faker.lorem.sentence(1),
additionalfeedescription: faker.lorem.sentence(1),
totaldiscountvalue: faker.lorem.sentence(1),
totalfeeorchargeamount: faker.lorem.sentence(1),
totaltaxamount: faker.lorem.sentence(1),
totalnetamount: faker.lorem.sentence(1),
totalincludingtax: faker.lorem.sentence(1),
roundingamount: faker.lorem.sentence(1),
totalpayableamount: faker.lorem.sentence(1),
invoicenumber: faker.lorem.sentence(1),

updatedBy: user._id,
createdBy: user._id
        };
        data = [...data, fake];
    }
    return data;
};
